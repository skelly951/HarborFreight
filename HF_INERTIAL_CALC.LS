/PROG  HF_INERTIAL_CALC
/ATTR
OWNER		= MNEDITOR;
COMMENT		= "";
PROG_SIZE	= 3773;
CREATE		= DATE 21-04-20  TIME 15:09:06;
MODIFIED	= DATE 21-05-13  TIME 11:53:16;
FILE_NAME	= ;
VERSION		= 0;
LINE_COUNT	= 171;
MEMORY_SIZE	= 4361;
PROTECT		= READ_WRITE;
TCD:  STACK_SIZE	= 0,
      TASK_PRIORITY	= 50,
      TIME_SLICE	= 0,
      BUSY_LAMP_OFF	= 0,
      ABORT_REQUEST	= 0,
      PAUSE_REQUEST	= 0;
DEFAULT_GROUP	= 1,*,*,*,*;
CONTROL_CODE	= 00000000 00000000;
/APPL

AUTO_SINGULARITY_HEADER;
  ENABLE_SINGULARITY_AVOIDANCE   : FALSE;
/MN
   1:  !********************* ;
   2:  !Dyn Payload & Inertia ;
   3:  !********************* ;
   4:   ;
   5:  !Mass [MG] & [MC] ;
   6:  R[301]=$PLST_GRP1[1].$PAYLOAD ;
   7:  R[302]=AR[1]    ;
   8:   ;
   9:  !Gripper CoG ;
  10:  R[303]=$PLST_GRP1[1].$PAYLOAD_X ;
  11:  R[303]=R[303]/100    ;
  12:  R[304]=$PLST_GRP1[1].$PAYLOAD_Y ;
  13:  R[304]=R[304]/100    ;
  14:  R[305]=$PLST_GRP1[1].$PAYLOAD_Z ;
  15:  R[305]=R[305]/100    ;
  16:   ;
  17:  !Cases CoG ;
  18:  R[306]=AR[4]/1000    ;
  19:  R[307]=AR[3]/1000    ;
  20:  R[308]=AR[2]/2/1000    ;
  21:   ;
  22:  !Add proper dist fr TF ;
  23:  !215 is tcp z offset ;
  24:  R[308]=R[308]+.215    ;
  25:   ;
  26:  !MG+MC ;
  27:  R[309]=R[301]+R[302]    ;
  28:   ;
  29:   ;
  30:  !CG,X ;
  31:  R[310]=R[303]*R[301]    ;
  32:  R[311]=0*R[302]    ;
  33:   ;
  34:  R[312]=R[310]+R[311]    ;
  35:  R[312]=R[312]/R[309]    ;
  36:   ;
  37:  !CG,Y ;
  38:  R[313]=R[304]*R[301]    ;
  39:  R[314]=0*R[302]    ;
  40:   ;
  41:  R[315]=R[313]+R[314]    ;
  42:  R[315]=R[315]/R[309]    ;
  43:   ;
  44:  !CG,Z ;
  45:  R[316]=R[305]*R[301]    ;
  46:  R[317]=R[308]*R[302]    ;
  47:   ;
  48:  R[318]=R[316]+R[317]    ;
  49:  R[318]=R[318]/R[309]    ;
  50:   ;
  51:   ;
  52:  !Gripper Inertial Values ;
  53:  R[319]=$PLST_GRP1[1].$PAYLOAD_IX ;
  54:  R[320]=$PLST_GRP1[1].$PAYLOAD_IY ;
  55:  R[321]=$PLST_GRP1[1].$PAYLOAD_IZ ;
  56:   ;
  57:  R[319]=R[319]/10000*1.00099    ;
  58:  R[320]=R[320]/10000*1.00099    ;
  59:  R[321]=R[321]/10000*1.00099    ;
  60:   ;
  61:  !Layer Info ;
  62:  !    R[206]=Layer Wt ;
  63:  !    R[207]=Case Ht ;
  64:  !    R[208]=Case Lg ;
  65:  !    R[209]=Case Wd ;
  66:   ;
  67:   ;
  68:  !Ht^2 [m^2] ;
  69:  R[322]=AR[2]*AR[2]*1e-06    ;
  70:   ;
  71:  !Lg^2 [m^2] ;
  72:  R[323]=1.03226    ;
  73:   ;
  74:  !Wd^2 [m^2] ;
  75:  R[324]=1.48649    ;
  76:   ;
  77:   ;
  78:  !Cases Inertial Values ;
  79:  !Ic,x ;
  80:  R[325]=R[323]+R[322]    ;
  81:  R[325]=R[325]*.0833333*R[302]    ;
  82:   ;
  83:  !Ic,y ;
  84:  R[326]=R[324]+R[322]    ;
  85:  R[326]=R[326]*.0833333*R[302]    ;
  86:   ;
  87:  !Ic,z ;
  88:  R[327]=R[323]+R[324]    ;
  89:  R[327]=R[327]*.0833333*R[302]    ;
  90:   ;
  91:   ;
  92:  !Parallel Axis Theorem ;
  93:  !Ig,x about P3 ;
  94:  R[328]=R[312]-R[303]    ;
  95:  R[328]=R[328]*R[328]*R[301]    ;
  96:  R[328]=R[328]+R[319]    ;
  97:   ;
  98:  !Ig,y about P3 ;
  99:  R[329]=R[315]-R[304]    ;
 100:  R[329]=R[329]*R[329]*R[301]    ;
 101:  R[329]=R[329]+R[320]    ;
 102:   ;
 103:  !Ig,z about P3 ;
 104:  R[330]=R[318]-R[305]    ;
 105:  R[330]=R[330]*R[330]*R[301]    ;
 106:  R[330]=R[330]+R[321]    ;
 107:   ;
 108:  !Ic,x about P3 ;
 109:  R[331]=R[312]-0    ;
 110:  R[331]=R[331]*R[331]*R[302]    ;
 111:  R[331]=R[331]+R[325]    ;
 112:  R[331]=R[331]+R[328]    ;
 113:  R[331]=R[331]*10194*.97999    ;
 114:   ;
 115:  !Ic,y about P3 ;
 116:  R[332]=R[315]-0    ;
 117:  R[332]=R[332]*R[332]*R[302]    ;
 118:  R[332]=R[332]+R[326]    ;
 119:  R[332]=R[332]+R[329]    ;
 120:  R[332]=R[332]*10194*.97999    ;
 121:   ;
 122:  !Ic,z about P3 ;
 123:  R[333]=R[318]-R[308]    ;
 124:  R[333]=R[333]*R[333]*R[302]    ;
 125:  R[333]=R[333]+R[327]    ;
 126:  R[333]=R[333]+R[330]    ;
 127:  R[333]=R[333]*10194*.97999    ;
 128:   ;
 129:  R[312]=R[312]*100    ;
 130:  R[315]=R[315]*100    ;
 131:  R[318]=R[318]*100    ;
 132:   ;
 133:  !UPDATE PROPERTIES ;
 134:  $PLST_GRP1[2].$PAYLOAD=R[309] ;
 135:  $PLST_GRP1[2].$PAYLOAD_X=R[312] ;
 136:  $PLST_GRP1[2].$PAYLOAD_Y=R[315] ;
 137:  $PLST_GRP1[2].$PAYLOAD_Z=R[318] ;
 138:  $PLST_GRP1[2].$PAYLOAD_IX=R[331] ;
 139:  $PLST_GRP1[2].$PAYLOAD_IY=R[332] ;
 140:  $PLST_GRP1[2].$PAYLOAD_IZ=R[333] ;
 141:   ;
 142:   ;
 143:   ;
 144:  !********************* ;
 145:  !VEL & ACC ADJUSTMENT ;
 146:  !BASED ON PAYLOAD/INERTIA ;
 147:  !********************* ;
 148:   ;
 149:  R[308]=AR[2]/1000    ;
 150:  R[295:Inertial Load]=R[307]*R[306]*R[306]    ;
 151:  R[295:Inertial Load]=R[308]*R[302]*R[307]*R[306]/1.23871/R[295:Inertial Load]    ;
 152:   ;
 153:  IF R[295:Inertial Load]<=75,JMP LBL[20] ;
 154:  IF R[295:Inertial Load]>75 AND R[295:Inertial Load]<=95,JMP LBL[21] ;
 155:  IF R[295:Inertial Load]>95,JMP LBL[22] ;
 156:   ;
 157:  LBL[20] ;
 158:  R[257:VEL SETTING]=2500    ;
 159:  R[258:ACC SETTING]=100    ;
 160:   ;
 161:  JMP LBL[23] ;
 162:  LBL[21] ;
 163:  R[257:VEL SETTING]=1875    ;
 164:  R[258:ACC SETTING]=75    ;
 165:   ;
 166:  JMP LBL[23] ;
 167:  LBL[22] ;
 168:  R[257:VEL SETTING]=1250    ;
 169:  R[258:ACC SETTING]=50    ;
 170:   ;
 171:  LBL[23] ;
/POS
/END
